add_header X-Content-Type-Options "nosniff";
add_header X-XSS-Protection "1; mode=block";
add_header X-Frame-Options "SAMEORIGIN";
add_header Strict-Transport-Security "max-age=631138519";
# add_header Content-Security-Policy "script-src-elem 'self'; default-src 'unsafe-inline'; font-src 'self' https://fonts.gstatic.com;  style-src 'self' https://fonts.googleapis.com;";

upstream api_server {
    server api:7000;
}

server {
    listen                    80;
    charset                   utf-8;
    server_name               yourdomain.com;
    error_log                 /var/log/nginx/f/nginx-errors.log;
    root                      /var/www/html/app/;
    index                     index.html;

    #### CERTBOT #####
    location /.well-known/acme-challenge/ {
        root                  /var/www/certbot;
    }
    location / {
        return                301 https://$host$request_uri;
    }
}

server {
    listen                    443 ssl;
    charset                   utf-8;
    server_name               yourdomain.com;
    error_log                 /var/log/nginx/f/nginx-errors.log;
    root                      /var/www/html/app/;
    index                     index.html;
    client_max_body_size      700m;

    ###############################################################################
    ### SSL Keys ##                                       PATH MUST BE ADJUSTED ###
    ###############################################################################
    ssl_certificate           /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    ###############################################################################
    include                   /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam               /etc/letsencrypt/ssl-dhparams.pem;

    # Frontend application (public)
    location / {
        try_files             $uri /index.html =404;
    }
    # Static files (public)
    location /static/ {
        root                  /var/www/html/app/static/;
        try_files             $uri =404;
    }

    # Uploads
    location ~ /uploaded {
        proxy_pass            http://api_server;
        proxy_http_version    1.1;
        proxy_redirect        off;
        proxy_cache_bypass    $http_upgrade;
        #add_header            Cache-Control no-cache;

        proxy_set_header      Host $host;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header      X-Real-IP  $remote_addr;
        proxy_set_header      X-Real-Scheme $scheme;
        proxy_set_header      X-Real-Host $host;
        proxy_set_header      X-Real-Uri $request_uri;
        proxy_set_header      User-Agent $http_user_agent;
        proxy_set_header      Referer $http_referer;
        proxy_pass_header     Authorization;
        proxy_pass_header     x-request-client;
        add_header            Access-Control-Allow-Credentials true;
        add_header            Access-Control-Allow-Headers   'X-Requested-With, x-request-client, Content-Type, Authorization';
        add_header            Access-Control-Allow-Methods   'GET, POST, OPTIONS, DELETE, PUT';
        add_header            Access-Control-Allow-Origin    '*';
    }

    # API
    location /api/ {
        proxy_pass            http://api_server;
        proxy_http_version    1.1;
        proxy_redirect        off;
        proxy_cache_bypass    $http_upgrade;
        add_header            Cache-Control no-cache;

        proxy_set_header      Host $host;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header      X-Real-IP  $remote_addr;
        proxy_set_header      X-Real-Scheme $scheme;
        proxy_set_header      X-Real-Host $host;
        proxy_set_header      X-Real-Uri $request_uri;
        proxy_set_header      User-Agent $http_user_agent;
        proxy_set_header      Referer $http_referer;
        proxy_pass_header     Authorization;
        proxy_pass_header     x-request-client;
        proxy_pass_header     x-recaptcha-token;
        add_header            Access-Control-Allow-Credentials true;
        add_header            Access-Control-Allow-Headers   'X-Requested-With, x-request-client, x-recaptcha-token, Content-Type, Authorization';
        add_header            Access-Control-Allow-Methods   'GET, POST, OPTIONS, DELETE, PUT';
        add_header            Access-Control-Allow-Origin    '*';
    }

    location = /robots.txt {
        alias                 /var/www/html/app/robots.txt;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|woff|woff2|svg|ttf|eot|map)$ {
        expires               4d;
    }
}


###############################################################################
##########################      Administration       ##########################
###############################################################################


server {
    listen                    80;
    charset                   utf-8;
    server_name               admin.yourdomain.com;
    error_log                 /var/log/nginx/f/nginx-errors.log;
    root                      /var/www/html/app-admin/;
    index                     index.html;

    #### CERTBOT #####
    location /.well-known/acme-challenge/ {
        root                  /var/www/certbot;
    }
    location / {
        return                301 https://$host$request_uri;
    }
}


server {
    listen                    443 ssl;
    charset                   utf-8;
    server_name               admin.yourdomain.com;
    error_log                 /var/log/nginx/f/nginx-errors.log;
    root                      /var/www/html/app-admin/;
    index                     index.html;

    ###############################################################################
    ### SSL Keys ##                                       PATH MUST BE ADJUSTED ###
    ###############################################################################
    #########################  AS FOR PUBLIC  #####################################

    ssl_certificate           /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    ###############################################################################
    include                   /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam               /etc/letsencrypt/ssl-dhparams.pem;

    # Admin application (public)
    location / {
        try_files             $uri /index.html =404;
    }
    # Static files (public)
    location /static/ {
        root                  /var/www/html/app-admin/static/;
        try_files             $uri =404;
    }

    location = /robots.txt {
        alias                 /var/www/html/app/robots.txt;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|woff|woff2|svg|ttf|eot|map)$ {
        expires               4d;
    }
}